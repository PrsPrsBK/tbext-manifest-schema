{
  "title": "JSON schema for Thunderbird Extension manifest file",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "additionalProperties": true,
  "required": [
    "manifest_version",
    "name",
    "version"
  ],
  "definitions": {
    "permissions": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "enum": [
              "accountsRead",
              "addressBooks",
              "manifest:browser_action",
              "manifest:cloud_file",
              "manifest:commands",
              "manifest:compose_action",
              "menus",
              "messagesRead",
              "manifest:optional_permissions",
              "pkcs11"
            ]
          }
        ]
      }
    },
    "KeyName": {
      "type": "string",
      "format": "manifestShortcutKey"
    },
    "ManifestBase": {
      "type": "object",
      "description": "Common properties for all manifest.json files",
      "properties": {
        "manifest_version": {
          "type": "number",
          "minimum": 2,
          "maximum": 2
        },
        "applications": {
          "type": "object",
          "properties": {
            "gecko": {
              "$ref": "FirefoxSpecificProperties"
            }
          }
        },
        "browser_specific_settings": {
          "type": "object",
          "properties": {
            "gecko": {
              "$ref": "FirefoxSpecificProperties"
            }
          }
        },
        "name": {
          "type": "string",
          "optional": false,
          "preprocess": "localize"
        },
        "short_name": {
          "type": "string",
          "preprocess": "localize"
        },
        "description": {
          "type": "string",
          "preprocess": "localize"
        },
        "author": {
          "type": "string",
          "preprocess": "localize",
          "onError": "warn"
        },
        "version": {
          "type": "string",
          "optional": false
        },
        "homepage_url": {
          "type": "string",
          "format": "url",
          "preprocess": "localize"
        }
      }
    },
    "WebExtensionManifest": {
      "type": "object",
      "description": "Represents a WebExtension manifest.json file",
      "$import": "ManifestBase",
      "properties": {
        "minimum_chrome_version": {
          "type": "string"
        },
        "minimum_opera_version": {
          "type": "string"
        },
        "icons": {
          "type": "object",
          "patternProperties": {
            "^[1-9]\\d*$": {
              "$ref": "ExtensionFileUrl"
            }
          }
        },
        "incognito": {
          "type": "string",
          "enum": [
            "not_allowed",
            "spanning"
          ],
          "default": "spanning"
        },
        "background": {
          "choices": [
            {
              "type": "object",
              "properties": {
                "page": {
                  "$ref": "ExtensionURL"
                },
                "persistent": {
                  "optional": true,
                  "$ref": "PersistentBackgroundProperty"
                }
              },
              "additionalProperties": {
                "$ref": "UnrecognizedProperty"
              }
            },
            {
              "type": "object",
              "properties": {
                "scripts": {
                  "type": "array",
                  "items": {
                    "$ref": "ExtensionURL"
                  }
                },
                "persistent": {
                  "optional": true,
                  "$ref": "PersistentBackgroundProperty"
                }
              },
              "additionalProperties": {
                "$ref": "UnrecognizedProperty"
              }
            }
          ]
        },
        "options_ui": {
          "type": "object",
          "properties": {
            "page": {
              "$ref": "ExtensionURL"
            },
            "browser_style": {
              "type": "boolean",
              "default": true
            },
            "chrome_style": {
              "type": "boolean"
            },
            "open_in_tab": {
              "type": "boolean"
            }
          },
          "additionalProperties": {
            "type": "any",
            "deprecated": "An unexpected property was found in the WebExtension manifest"
          }
        },
        "content_scripts": {
          "type": "array",
          "items": {
            "$ref": "ContentScript"
          }
        },
        "content_security_policy": {
          "type": "string",
          "format": "contentSecurityPolicy",
          "onError": "warn"
        },
        "permissions": {
          "type": "array",
          "default": [],
          "items": {
            "$ref": "PermissionOrOrigin",
            "onError": "warn"
          }
        },
        "optional_permissions": {
          "type": "array",
          "items": {
            "$ref": "OptionalPermissionOrOrigin",
            "onError": "warn"
          },
          "default": []
        },
        "web_accessible_resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "developer": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "preprocess": "localize"
            },
            "url": {
              "type": "string",
              "preprocess": "localize"
            }
          }
        },
        "hidden": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": {
        "$ref": "UnrecognizedProperty"
      }
    },
    "WebExtensionLangpackManifest": {
      "type": "object",
      "description": "Represents a WebExtension language pack manifest.json file",
      "$import": "ManifestBase",
      "properties": {
        "homepage_url": {
          "type": "string",
          "format": "url",
          "preprocess": "localize"
        },
        "langpack_id": {
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z-]+$"
        },
        "languages": {
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}[a-zA-Z-]*$": {
              "type": "object",
              "properties": {
                "chrome_resources": {
                  "type": "object",
                  "patternProperties": {
                    "^[a-zA-Z-.]+$": {
                      "choices": [
                        {
                          "$ref": "ExtensionURL"
                        },
                        {
                          "type": "object",
                          "patternProperties": {
                            "^[a-z]+$": {
                              "$ref": "ExtensionURL"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "version": {
                  "type": "string"
                }
              }
            }
          }
        },
        "sources": {
          "type": "object",
          "patternProperties": {
            "^[a-z]+$": {
              "type": "object",
              "properties": {
                "base_path": {
                  "$ref": "ExtensionURL"
                },
                "paths": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "strictRelativeUrl"
                  },
                  "optional": true
                }
              }
            }
          }
        }
      }
    },
    "WebExtensionDictionaryManifest": {
      "type": "object",
      "description": "Represents a WebExtension dictionary manifest.json file",
      "$import": "ManifestBase",
      "properties": {
        "homepage_url": {
          "type": "string",
          "format": "url",
          "preprocess": "localize"
        },
        "dictionaries": {
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}[a-zA-Z-]*$": {
              "type": "string",
              "format": "strictRelativeUrl",
              "pattern": "\\.dic$"
            }
          }
        }
      }
    },
    "ThemeIcons": {
      "type": "object",
      "properties": {
        "light": {
          "$ref": "ExtensionURL",
          "description": "A light icon to use for dark themes"
        },
        "dark": {
          "$ref": "ExtensionURL",
          "description": "The dark icon to use for light themes"
        },
        "size": {
          "type": "number",
          "description": "The size of the icons"
        }
      },
      "additionalProperties": {
        "$ref": "UnrecognizedProperty"
      }
    },
    "OptionalPermission": {
      "choices": [
        {
          "type": "string",
          "enum": [
            "clipboardRead",
            "clipboardWrite",
            "geolocation",
            "idle",
            "notifications"
          ]
        }
      ]
    },
    "OptionalPermissionOrOrigin": {
      "choices": [
        {
          "$ref": "OptionalPermission"
        },
        {
          "$ref": "MatchPattern"
        }
      ]
    },
    "Permission": {
      "choices": [
        {
          "$ref": "OptionalPermission"
        },
        {
          "type": "string",
          "enum": [
            "alarms",
            "mozillaAddons",
            "storage",
            "unlimitedStorage"
          ]
        }
      ]
    },
    "PermissionOrOrigin": {
      "choices": [
        {
          "$ref": "Permission"
        },
        {
          "$ref": "MatchPattern"
        }
      ]
    },
    "HttpURL": {
      "type": "string",
      "format": "url",
      "pattern": "^https?://.*$"
    },
    "ExtensionURL": {
      "type": "string",
      "format": "strictRelativeUrl"
    },
    "ExtensionFileUrl": {
      "type": "string",
      "format": "strictRelativeUrl",
      "pattern": "\\S"
    },
    "ImageDataOrExtensionURL": {
      "type": "string",
      "format": "imageDataOrStrictRelativeUrl"
    },
    "ExtensionID": {
      "choices": [
        {
          "type": "string",
          "pattern": "(?i)^\\{[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\}$"
        },
        {
          "type": "string",
          "pattern": "(?i)^[a-z0-9-._]*@[a-z0-9-._]+$"
        }
      ]
    },
    "FirefoxSpecificProperties": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "ExtensionID"
        },
        "update_url": {
          "type": "string",
          "format": "url"
        },
        "strict_min_version": {
          "type": "string"
        },
        "strict_max_version": {
          "type": "string"
        }
      }
    },
    "MatchPattern": {
      "choices": [
        {
          "type": "string",
          "enum": [
            "<all_urls>"
          ]
        },
        {
          "$ref": "MatchPatternRestricted"
        },
        {
          "$ref": "MatchPatternUnestricted"
        }
      ]
    },
    "MatchPatternRestricted": {
      "description": "Same as MatchPattern above, but excludes <all_urls>",
      "choices": [
        {
          "type": "string",
          "pattern": "^(https?|wss?|file|ftp|\\*)://(\\*|\\*\\.[^*/]+|[^*/]+)/.*$"
        },
        {
          "type": "string",
          "pattern": "^file:///.*$"
        }
      ]
    },
    "MatchPatternUnestricted": {
      "description": "Mostly unrestricted match patterns for privileged add-ons. This should technically be rejected for unprivileged add-ons, but, reasons. The MatchPattern class will still refuse privileged schemes for those extensions.",
      "choices": [
        {
          "type": "string",
          "pattern": "^resource://(\\*|\\*\\.[^*/]+|[^*/]+)/.*$|^about:"
        }
      ]
    },
    "ContentScript": {
      "type": "object",
      "description": "Details of the script or CSS to inject. Either the code or the file property must be set, but both may not be set at the same time. Based on InjectDetails, but using underscore rather than camel case naming conventions.",
      "additionalProperties": {
        "$ref": "UnrecognizedProperty"
      },
      "properties": {
        "matches": {
          "type": "array",
          "optional": false,
          "minItems": 1,
          "items": {
            "$ref": "MatchPattern"
          }
        },
        "exclude_matches": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "MatchPattern"
          }
        },
        "include_globs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclude_globs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "css": {
          "type": "array",
          "description": "The list of CSS files to inject",
          "items": {
            "$ref": "ExtensionURL"
          }
        },
        "js": {
          "type": "array",
          "description": "The list of JS files to inject",
          "items": {
            "$ref": "ExtensionURL"
          }
        },
        "all_frames": {
          "type": "boolean",
          "description": "If allFrames is <code>true</code>, implies that the JavaScript or CSS should be injected into all frames of current page. By default, it's <code>false</code> and is only injected into the top frame."
        },
        "match_about_blank": {
          "type": "boolean",
          "description": "If matchAboutBlank is true, then the code is also injected in about:blank and about:srcdoc frames if your extension has access to its parent document. Code cannot be inserted in top-level about:-frames. By default it is <code>false</code>."
        },
        "run_at": {
          "$ref": "extensionTypes.RunAt",
          "default": "document_idle",
          "description": "The soonest that the JavaScript or CSS will be injected into the tab. Defaults to \"document_idle\"."
        }
      }
    },
    "IconPath": {
      "choices": [
        {
          "type": "object",
          "patternProperties": {
            "^[1-9]\\d*$": {
              "$ref": "ExtensionFileUrl"
            }
          },
          "additionalProperties": false
        },
        {
          "$ref": "ExtensionFileUrl"
        }
      ]
    },
    "IconImageData": {
      "choices": [
        {
          "type": "object",
          "patternProperties": {
            "^[1-9]\\d*$": {
              "$ref": "ImageData"
            }
          },
          "additionalProperties": false
        },
        {
          "$ref": "ImageData"
        }
      ]
    },
    "ImageData": {
      "type": "object",
      "isInstanceOf": "ImageData",
      "postprocess": "convertImageDataToURL"
    },
    "UnrecognizedProperty": {
      "type": [
        "string",
        "number",
        "object",
        "array",
        "boolean",
        "null"
      ],
      "deprecated": "An unexpected property was found in the WebExtension manifest."
    },
    "PersistentBackgroundProperty": {
      "choices": [
        {
          "type": "boolean",
          "enum": [
            true
          ]
        },
        {
          "type": "boolean",
          "enum": [
            false
          ],
          "deprecated": "Event pages are not currently supported. This will run as a persistent background page."
        }
      ]
    },
    "ProtocolHandler": {
      "type": "object",
      "description": "Represents a protocol handler definition.",
      "properties": {
        "name": {
          "description": "A user-readable title string for the protocol handler. This will be displayed to the user in interface objects as needed.",
          "type": "string"
        },
        "protocol": {
          "description": "The protocol the site wishes to handle, specified as a string. For example, you can register to handle SMS text message links by registering to handle the \"sms\" scheme.",
          "choices": [
            {
              "type": "string",
              "enum": [
                "bitcoin",
                "dat",
                "dweb",
                "geo",
                "gopher",
                "im",
                "ipfs",
                "ipns",
                "irc",
                "ircs",
                "magnet",
                "mailto",
                "mms",
                "news",
                "nntp",
                "sip",
                "sms",
                "smsto",
                "ssb",
                "ssh",
                "tel",
                "urn",
                "webcal",
                "wtai",
                "xmpp"
              ]
            },
            {
              "type": "string",
              "pattern": "^(ext|web)\\+[a-z0-9.+-]+$"
            }
          ]
        },
        "uriTemplate": {
          "description": "The URL of the handler, as a string. This string should include \"%s\" as a placeholder which will be replaced with the escaped URL of the document to be handled. This URL might be a true URL, or it could be a phone number, email address, or so forth.",
          "preprocess": "localize",
          "choices": [
            {
              "$ref": "ExtensionURL"
            },
            {
              "$ref": "HttpURL"
            }
          ]
        }
      }
    },
    "ThemeColor": {
      "choices": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "minItems": 3,
          "maxItems": 3,
          "items": {
            "type": "integer",
            "minimum": 0,
            "maximum": 255
          }
        },
        {
          "type": "array",
          "minItems": 4,
          "maxItems": 4,
          "items": {
            "type": "number"
          }
        }
      ]
    },
    "ThemeExperiment": {
      "type": "object",
      "properties": {
        "stylesheet": {
          "$ref": "ExtensionURL"
        },
        "images": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "colors": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ThemeType": {
      "type": "object",
      "properties": {
        "images": {
          "type": "object",
          "properties": {
            "additional_backgrounds": {
              "type": "array",
              "items": {
                "$ref": "ImageDataOrExtensionURL"
              },
              "maxItems": 15
            },
            "headerURL": {
              "$ref": "ImageDataOrExtensionURL",
              "deprecated": "Please use <em>theme.images.theme_frame</em>, this alias will be removed in Firefox 69."
            },
            "theme_frame": {
              "$ref": "ImageDataOrExtensionURL"
            }
          },
          "additionalProperties": {
            "$ref": "ImageDataOrExtensionURL"
          }
        },
        "colors": {
          "type": "object",
          "properties": {
            "tab_selected": {
              "$ref": "ThemeColor"
            },
            "accentcolor": {
              "$ref": "ThemeColor",
              "deprecated": "Please use <em>theme.colors.frame</em>, this alias will be removed in Firefox 69."
            },
            "frame": {
              "$ref": "ThemeColor"
            },
            "frame_inactive": {
              "$ref": "ThemeColor"
            },
            "textcolor": {
              "$ref": "ThemeColor",
              "deprecated": "Please use <em>theme.colors.tab_background_text</em>, this alias will be removed in Firefox 69."
            },
            "tab_background_text": {
              "$ref": "ThemeColor"
            },
            "tab_background_separator": {
              "$ref": "ThemeColor"
            },
            "tab_loading": {
              "$ref": "ThemeColor"
            },
            "tab_text": {
              "$ref": "ThemeColor"
            },
            "tab_line": {
              "$ref": "ThemeColor"
            },
            "toolbar": {
              "$ref": "ThemeColor"
            },
            "toolbar_text": {
              "$ref": "ThemeColor",
              "deprecated": "Please use <em>theme.colors.bookmark_text</em>, this alias will be removed in Firefox 69."
            },
            "bookmark_text": {
              "$ref": "ThemeColor"
            },
            "toolbar_field": {
              "$ref": "ThemeColor"
            },
            "toolbar_field_text": {
              "$ref": "ThemeColor"
            },
            "toolbar_field_border": {
              "$ref": "ThemeColor"
            },
            "toolbar_field_separator": {
              "$ref": "ThemeColor"
            },
            "toolbar_top_separator": {
              "$ref": "ThemeColor"
            },
            "toolbar_bottom_separator": {
              "$ref": "ThemeColor"
            },
            "toolbar_vertical_separator": {
              "$ref": "ThemeColor"
            },
            "icons": {
              "$ref": "ThemeColor"
            },
            "icons_attention": {
              "$ref": "ThemeColor"
            },
            "button_background_hover": {
              "$ref": "ThemeColor"
            },
            "button_background_active": {
              "$ref": "ThemeColor"
            },
            "popup": {
              "$ref": "ThemeColor"
            },
            "popup_text": {
              "$ref": "ThemeColor"
            },
            "popup_border": {
              "$ref": "ThemeColor"
            },
            "toolbar_field_focus": {
              "$ref": "ThemeColor"
            },
            "toolbar_field_text_focus": {
              "$ref": "ThemeColor"
            },
            "toolbar_field_border_focus": {
              "$ref": "ThemeColor"
            },
            "popup_highlight": {
              "$ref": "ThemeColor"
            },
            "popup_highlight_text": {
              "$ref": "ThemeColor"
            },
            "ntp_background": {
              "$ref": "ThemeColor"
            },
            "ntp_text": {
              "$ref": "ThemeColor"
            },
            "sidebar": {
              "$ref": "ThemeColor"
            },
            "sidebar_border": {
              "$ref": "ThemeColor"
            },
            "sidebar_text": {
              "$ref": "ThemeColor"
            },
            "sidebar_highlight": {
              "$ref": "ThemeColor"
            },
            "sidebar_highlight_text": {
              "$ref": "ThemeColor"
            },
            "toolbar_field_highlight": {
              "$ref": "ThemeColor"
            },
            "toolbar_field_highlight_text": {
              "$ref": "ThemeColor"
            }
          },
          "additionalProperties": {
            "$ref": "ThemeColor"
          }
        },
        "icons": {
          "type": "object",
          "properties": {
            "back": {
              "$ref": "ExtensionURL"
            },
            "forward": {
              "$ref": "ExtensionURL"
            },
            "reload": {
              "$ref": "ExtensionURL"
            },
            "stop": {
              "$ref": "ExtensionURL"
            },
            "bookmark_star": {
              "$ref": "ExtensionURL"
            },
            "bookmark_menu": {
              "$ref": "ExtensionURL"
            },
            "downloads": {
              "$ref": "ExtensionURL"
            },
            "home": {
              "$ref": "ExtensionURL"
            },
            "app_menu": {
              "$ref": "ExtensionURL"
            },
            "cut": {
              "$ref": "ExtensionURL"
            },
            "copy": {
              "$ref": "ExtensionURL"
            },
            "paste": {
              "$ref": "ExtensionURL"
            },
            "new_window": {
              "$ref": "ExtensionURL"
            },
            "new_private_window": {
              "$ref": "ExtensionURL"
            },
            "save_page": {
              "$ref": "ExtensionURL"
            },
            "print": {
              "$ref": "ExtensionURL"
            },
            "history": {
              "$ref": "ExtensionURL"
            },
            "full_screen": {
              "$ref": "ExtensionURL"
            },
            "find": {
              "$ref": "ExtensionURL"
            },
            "options": {
              "$ref": "ExtensionURL"
            },
            "addons": {
              "$ref": "ExtensionURL"
            },
            "developer": {
              "$ref": "ExtensionURL"
            },
            "synced_tabs": {
              "$ref": "ExtensionURL"
            },
            "open_file": {
              "$ref": "ExtensionURL"
            },
            "sidebars": {
              "$ref": "ExtensionURL"
            },
            "subscribe": {
              "$ref": "ExtensionURL"
            },
            "text_encoding": {
              "$ref": "ExtensionURL"
            },
            "email_link": {
              "$ref": "ExtensionURL"
            },
            "forget": {
              "$ref": "ExtensionURL"
            },
            "pocket": {
              "$ref": "ExtensionURL"
            },
            "getmsg": {
              "$ref": "ExtensionURL"
            },
            "newmsg": {
              "$ref": "ExtensionURL"
            },
            "address": {
              "$ref": "ExtensionURL"
            },
            "reply": {
              "$ref": "ExtensionURL"
            },
            "replyall": {
              "$ref": "ExtensionURL"
            },
            "replylist": {
              "$ref": "ExtensionURL"
            },
            "forwarding": {
              "$ref": "ExtensionURL"
            },
            "delete": {
              "$ref": "ExtensionURL"
            },
            "junk": {
              "$ref": "ExtensionURL"
            },
            "file": {
              "$ref": "ExtensionURL"
            },
            "nextUnread": {
              "$ref": "ExtensionURL"
            },
            "prevUnread": {
              "$ref": "ExtensionURL"
            },
            "mark": {
              "$ref": "ExtensionURL"
            },
            "tag": {
              "$ref": "ExtensionURL"
            },
            "compact": {
              "$ref": "ExtensionURL"
            },
            "archive": {
              "$ref": "ExtensionURL"
            },
            "chat": {
              "$ref": "ExtensionURL"
            },
            "nextMsg": {
              "$ref": "ExtensionURL"
            },
            "prevMsg": {
              "$ref": "ExtensionURL"
            },
            "QFB": {
              "$ref": "ExtensionURL"
            },
            "conversation": {
              "$ref": "ExtensionURL"
            },
            "newcard": {
              "$ref": "ExtensionURL"
            },
            "newlist": {
              "$ref": "ExtensionURL"
            },
            "editcard": {
              "$ref": "ExtensionURL"
            },
            "newim": {
              "$ref": "ExtensionURL"
            },
            "send": {
              "$ref": "ExtensionURL"
            },
            "spelling": {
              "$ref": "ExtensionURL"
            },
            "attach": {
              "$ref": "ExtensionURL"
            },
            "security": {
              "$ref": "ExtensionURL"
            },
            "save": {
              "$ref": "ExtensionURL"
            },
            "quote": {
              "$ref": "ExtensionURL"
            },
            "buddy": {
              "$ref": "ExtensionURL"
            },
            "join_chat": {
              "$ref": "ExtensionURL"
            },
            "chat_accounts": {
              "$ref": "ExtensionURL"
            },
            "calendar": {
              "$ref": "ExtensionURL"
            },
            "tasks": {
              "$ref": "ExtensionURL"
            },
            "synchronize": {
              "$ref": "ExtensionURL"
            },
            "newevent": {
              "$ref": "ExtensionURL"
            },
            "newtask": {
              "$ref": "ExtensionURL"
            },
            "editevent": {
              "$ref": "ExtensionURL"
            },
            "today": {
              "$ref": "ExtensionURL"
            },
            "category": {
              "$ref": "ExtensionURL"
            },
            "complete": {
              "$ref": "ExtensionURL"
            },
            "priority": {
              "$ref": "ExtensionURL"
            },
            "saveandclose": {
              "$ref": "ExtensionURL"
            },
            "attendees": {
              "$ref": "ExtensionURL"
            },
            "privacy": {
              "$ref": "ExtensionURL"
            },
            "status": {
              "$ref": "ExtensionURL"
            },
            "freebusy": {
              "$ref": "ExtensionURL"
            },
            "timezones": {
              "$ref": "ExtensionURL"
            }
          },
          "additionalProperties": {
            "$ref": "UnrecognizedProperty"
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "additional_backgrounds_alignment": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bottom",
                  "center",
                  "left",
                  "right",
                  "top",
                  "center bottom",
                  "center center",
                  "center top",
                  "left bottom",
                  "left center",
                  "left top",
                  "right bottom",
                  "right center",
                  "right top"
                ]
              },
              "maxItems": 15
            },
            "additional_backgrounds_tiling": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "no-repeat",
                  "repeat",
                  "repeat-x",
                  "repeat-y"
                ]
              },
              "maxItems": 15
            }
          },
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": {
        "$ref": "UnrecognizedProperty"
      }
    },
    "ThemeManifest": {
      "type": "object",
      "description": "Contents of manifest.json for a static theme",
      "$import": "manifest.ManifestBase",
      "properties": {
        "theme": {
          "$ref": "ThemeType"
        },
        "default_locale": {
          "type": "string"
        },
        "theme_experiment": {
          "$ref": "ThemeExperiment"
        },
        "icons": {
          "type": "object",
          "patternProperties": {
            "^[1-9]\\d*$": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "properties": {
    "permissions": {
      "$ref": "#/definitions/permissions"
    },
    "browser_action": {
      "type": "object",
      "additionalProperties": {
        "$ref": "UnrecognizedProperty"
      },
      "properties": {
        "default_title": {
          "type": "string",
          "preprocess": "localize"
        },
        "default_icon": {
          "$ref": "IconPath"
        },
        "theme_icons": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "ThemeIcons"
          },
          "description": "Specifies icons to use for dark and light themes"
        },
        "default_popup": {
          "type": "string",
          "format": "relativeUrl",
          "preprocess": "localize"
        },
        "browser_style": {
          "type": "boolean",
          "default": false
        },
        "default_area": {
          "description": "Currently unused.",
          "type": "string"
        }
      }
    },
    "cloud_file": {
      "type": "object",
      "additionalProperties": {
        "$ref": "UnrecognizedProperty"
      },
      "properties": {
        "name": {
          "type": "string",
          "preprocess": "localize",
          "description": "Name of the cloud file service."
        },
        "service_url": {
          "type": "string",
          "description": "URL to the web page of the cloud file service."
        },
        "new_account_url": {
          "type": "string",
          "deprecated": true,
          "description": "This property was never used."
        },
        "settings_url": {
          "type": "string",
          "format": "relativeUrl",
          "preprocess": "localize",
          "deprecated": true,
          "description": "A page for configuring accounts, this is obsolete after Thunderbird 60."
        },
        "management_url": {
          "type": "string",
          "format": "relativeUrl",
          "preprocess": "localize",
          "description": "A page for configuring accounts, to be displayed in the preferences UI."
        }
      }
    },
    "commands": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "UnrecognizedProperty"
        },
        "properties": {
          "suggested_key": {
            "type": "object",
            "optional": true,
            "properties": {
              "default": {
                "$ref": "KeyName",
                "optional": true
              },
              "mac": {
                "$ref": "KeyName",
                "optional": true
              },
              "linux": {
                "$ref": "KeyName",
                "optional": true
              },
              "windows": {
                "$ref": "KeyName",
                "optional": true
              },
              "chromeos": {
                "type": "string",
                "optional": true
              },
              "android": {
                "type": "string",
                "optional": true
              },
              "ios": {
                "type": "string",
                "optional": true
              },
              "additionalProperties": {
                "type": "string",
                "deprecated": "Unknown platform name",
                "optional": true
              }
            }
          },
          "description": {
            "type": "string",
            "optional": true
          }
        }
      }
    },
    "compose_action": {
      "type": "object",
      "additionalProperties": {
        "$ref": "UnrecognizedProperty"
      },
      "properties": {
        "default_title": {
          "type": "string",
          "preprocess": "localize"
        },
        "default_icon": {
          "$ref": "IconPath"
        },
        "theme_icons": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "ThemeIcons"
          },
          "description": "Specifies icons to use for dark and light themes"
        },
        "default_popup": {
          "type": "string",
          "format": "relativeUrl",
          "preprocess": "localize"
        },
        "browser_style": {
          "type": "boolean",
          "default": false
        },
        "default_area": {
          "description": "Defines the location the composeAction will appear by default. The default location is maintoolbar.",
          "type": "string",
          "enum": [
            "maintoolbar",
            "formattoolbar"
          ]
        }
      }
    },
    "legacy": {
      "choices": [
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "string"
                },
                "open_in_tab": {
                  "type": "boolean",
                  "optional": true
                }
              }
            }
          }
        }
      ]
    },
    "experiment_apis": {
      "type": "object",
      "additionalProperties": {
        "$ref": "experiments.ExperimentAPI"
      }
    },
    "protocol_handlers": {
      "description": "A list of protocol handler definitions.",
      "type": "array",
      "items": {
        "$ref": "ProtocolHandler"
      }
    },
    "default_locale": {
      "type": "string"
    },
    "theme_experiment": {
      "$ref": "ThemeExperiment"
    }
  }
}